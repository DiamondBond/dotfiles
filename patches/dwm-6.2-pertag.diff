dwm-6.2-pertag
Author: Jan Christoph Ebersbach <jceb@e-jc.de>
URL: http://dwm.suckless.org/patches/pertag
This patch keeps layout, mwfact, barpos and nmaster per tag.

Index: dwm/dwm.c
===================================================================
113a114
> typedef struct Pertag Pertag;
132a134
> 	Pertag *pertag;
273a276,284
> struct Pertag {
>     unsigned int curtag, prevtag; /* current and previous tag */
>     int nmasters[LENGTH(tags) + 1]; /* number of windows in master area */
>     float mfacts[LENGTH(tags) + 1]; /* mfacts per tag */
>     unsigned int sellts[LENGTH(tags) + 1]; /* selected layouts */
>     const Layout *ltidxs[LENGTH(tags) + 1][2]; /* matrix of tags and layouts indexes */
>     int showbars [LENGTH(tags) + 1] /* display bar for the current tag */
> };
> 
633a645
> 	unsigned int i;
643a656,668
> 	m->pertag = ecalloc(1, sizeof(Pertag));
> 	m->pertag->curtag = m->pertag->prevtag = 1;
> 	
> 	for (i = 0; i <= LENGTH(tags); i++) {
> 	    m->pertag->nmasters[i] = m->nmaster;
> 	    m->pertag->mfacts[i] = m->mfact;
> 	    
> 	    m->pertag->ltidxs[i][0] = m->lt[0];
> 	    m->pertag->ltidxs[i][1] = m->lt[1];
> 	    m->pertag->sellts[i] = m->sellt;
> 	    
> 	    m->pertag->showbars[i] = m->showbar;
> 	}
969,970c994,995
< 	selmon->nmaster = MAX(selmon->nmaster + arg->i, 0);
< 	arrange(selmon);
---
>     selmon->nmaster = selmon->pertag->nmasters[selmon->pertag->curtag] = MAX(selmon->nmaster + arg->i, 0);
>     arrange(selmon);
1504c1529
< 		selmon->sellt ^= 1;
---
> 		selmon->sellt = selmon->pertag->sellts[selmon->pertag->curtag] ^= 1;
1506c1531
< 		selmon->lt[selmon->sellt] = (Layout *)arg->v;
---
> 		selmon->lt[selmon->sellt] = selmon->pertag->ltidxs[selmon->pertag->curtag][selmon->sellt] = (Layout *)arg->v;
1525c1550
< 	selmon->mfact = f;
---
> 	selmon->mfact = selmon->pertag->mfacts[selmon->pertag->curtag] = f;
1702c1727
< 	selmon->showbar = !selmon->showbar;
---
> 	selmon->showbar = selmon->pertag->showbars[selmon->pertag->curtag] = !selmon->showbar;
1740a1766
> 	int i;
1743a1770,1791
> 		if (newtagset == ~0) {
> 		    selmon->pertag->prevtag = selmon->pertag->curtag;
> 		    selmon->pertag->curtag = 0;
> 		}
> 		
> 		/* test if the user did not select the same tag */
> 		if (!(newtagset & 1 << (selmon->pertag->curtag - 1))) {
> 		    selmon->pertag->prevtag = selmon->pertag->curtag;
> 		    for (i = 0; !(newtagset & 1 << i); i++) ;
> 		    selmon->pertag->curtag = i + 1;
> 		}
> 		
> 		/* apply settings for this view */
> 		selmon->nmaster = selmon->pertag->nmasters[selmon->pertag->curtag];
> 		selmon->mfact = selmon->pertag->mfacts[selmon->pertag->curtag];
> 		selmon->sellt = selmon->pertag->sellts[selmon->pertag->curtag];
> 		selmon->lt[selmon->sellt] = selmon->pertag->ltidxs[selmon->pertag->curtag][selmon->sellt];
> 		selmon->lt[selmon->sellt^1] = selmon->pertag->ltidxs[selmon->pertag->curtag][selmon->sellt^1];
> 		
> 		if (selmon->showbar != selmon->pertag->showbars[selmon->pertag->curtag])
> 		    togglebar(NULL);
> 
2037a2086,2088
>     int i;
>     unsigned int tmptag;
> 
2041c2092
< 	if (arg->ui & TAGMASK)
---
> 	if (arg->ui & TAGMASK) {
2042a2094,2115
> 		selmon->pertag->prevtag = selmon->pertag->curtag;
> 
> 		if (arg->ui == ~0)
> 		    selmon->pertag->curtag = 0;
> 		else {
> 		    for (i = 0; !(arg->ui & 1 << i); i++);
> 		    selmon->pertag->curtag = i + 1;
> 		}
> 	} else {
> 	    tmptag = selmon->pertag->prevtag;
> 	    selmon->pertag->prevtag = selmon->pertag->curtag;
> 	    selmon->pertag->curtag = tmptag;
> 	}
> 	selmon->nmaster = selmon->pertag->nmasters[selmon->pertag->curtag];
> 	selmon->mfact = selmon->pertag->mfacts[selmon->pertag->curtag];
> 	selmon->sellt = selmon->pertag->sellts[selmon->pertag->curtag];
> 	selmon->lt[selmon->sellt] = selmon->pertag->ltidxs[selmon->pertag->curtag][selmon->sellt];
> 	selmon->lt[selmon->sellt^1] = selmon->pertag->ltidxs[selmon->pertag->curtag][selmon->sellt^1];
> 
> 	if (selmon->showbar != selmon->pertag->showbars[selmon->pertag->curtag])
> 	    togglebar(NULL);
> 
